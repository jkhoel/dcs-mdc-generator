//- DEV WITH: npx pug -w . -o ./ -P

- 
  function padNumber(n, width = 3, z = 0, precision = 0) {
    if (!Number.isNaN(parseFloat(n))) {
      n = Math.round(n);
    }

    return (String(z).repeat(width) + String(n)).slice(String(n).length);
  };

-
  function round(value, decimals) {
    return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);
  };

-
  function SecondsToHHSS(seconds) {
    let t = seconds / 3600;
    let h = padNumber(Math.round(parseInt(t)), 2);
    let s = padNumber(Math.round((t - h) * 60), 2);

    return `${h}:${s}`;
  };

-
  function DDtoDDM(dd) {
    const dec = dd.toString().split('.')[0];
    const ms = ((dd - dec) * 60).toFixed(3);

    let min = ms.toString().split('.')[0];
    let sec = ms.toString().split('.')[1];

    min = padNumber(min.toString().split('.')[0], 2);
    sec = padNumber(sec.toString(), 3);

    const res = `${dec}°${min}.${sec}'`;

    return res;
  };

-
  function DDtoDMS(dd) {
    const dec = dd.toString().split('.')[0];
    let min = parseFloat(`.${dd.toString().split('.')[1]}`) * 60;
    let sec = Math.round(parseFloat(`.${min.toString().split('.')[1]}`) * 60);

    min = padNumber(min.toString().split('.')[0], 2);
    sec = padNumber(sec.toString(), 2);

    const res = `${dec}° ${min}' ${sec}"`;

    if (min === 'aN') return '';
    return res;
  };

-
  function FormatCoords(dd) {
    switch (settings.coordFormat) {
      case 'dd':
        return round(dd, 3);
      case 'dms':
        return DDtoDMS(dd);
      default:
        return DDtoDDM(dd);
    }
  };

-
  function FormatAltitude(altitude) {
    let { transition_alt } = settings || 9000;

    // If we are above the transition alt, then convert to Flight Level
    if (altitude > parseInt(transition_alt)) {
      const fl = Math.round(altitude / 100);
      if (fl < 100) return `FL0${fl}`;
      return `FL${fl}`;
    }
    // If not, then just return the altitude in feet
    return altitude;
  };

-
  function FormatSpeed(wp) {
    const { speedtype } = wp;

    if (speedtype === 'mach')
      return `${parseFloat(wp[speedtype]).toFixed(2)}M`;

    if (speedtype === 'gs') return `${Math.round(wp[speedtype])} GS`;

    return `${Math.round(wp[speedtype])} K${speedtype.toUpperCase()}`;
  };

//- ### TEMP DATA
//- - 
//-   const waypoints = [
//-     { desc: "DEP", wp: "012345678901234", alt: "813", gs: "300", tot: 70200, act: 0, lat: "24.2752666666667", lon: "55.6113833333333", dist: 0, brg: 0 },
//-     { desc: "WP", wp: "1", alt: "1500", gs: "300", tot: 71033.48791441802, act: 0, lat: "24.8891086358444", lon: "56.6894652395402", dist: 69, brg: 58 },
//-     { desc: "WP", wp: "2", alt: "1500", gs: "300", tot: 71482.34997529117, act: 0, lat: "25.5138824943904", lon: "56.7191173282923", dist: 37, brg: 2 },
//-     { desc: "ARR", wp: "Khasab", alt: "1500", gs: "300", tot: 72051.61841114698, act: 0, lat: "26.1797222222", lon: "56.2430555556", dist: 47, brg: 327 }
//-   ]

//- -
//-   const airfields = [
//-     { type: "DEP", airbase: "Al Dhafra AB", icao: "OMAM", tcn: "96X", atis: "126.400", gnd: "126.100", twr: "126.200", par: "126.300", ctrl: "127.100", elev: "52", rwy: "13LR/31LR" },
//-     { type: "ARR", airbase: "CVN Stennis", icao: "", tcn: "74X", atis: "", gnd: "", twr: "309.000", par: "309.500", ctrl: "309.900", elev: "", rwy: "" },
//-     { type: "ALT", airbase: "Al Dhafra AB", icao: "OMAM", tcn: "96X", atis: "126.400", gnd: "126.100", twr: "126.200", par: "126.300", ctrl: "127.100", elev: "52", rwy: "13LR/31LR"}
//-   ]

//- -
//-   const settings = {
//-     coordFormat: 'ddm'
//-   }

- const notes = null  //- Temp turn off notes, as the input is not made yet

//- ### DOCUMENT

doctype html
html(lang="en")
  head
    title #{title}
    style
      include css/fonts.css
      include css/kneeboard.css

  body
    //- ##### PAGE: FRONTPAGE
    div.kneeboard#kneeboard
      //- Callsign and Mission Number
      table.kb-width(style="table-layout:fixed")
        colgroup
          col(style="width: 60px")
          col(style="width: 100px")
          col(style="width: 70px")
          col(style="width: 100px")
          col(style="width: 70px")
          col
          col(style="width: 30px")
          col(style="width: 80px")

        tbody
          if mission
            tr
              th FLIGHT
              td(style="padding-left: 5px") #{mission.callsign}
              th PACKAGE
              td(style="padding-left: 5px") #{mission.packageName}
              th MISSION
              td(style="padding-left: 5px") #{mission.desc}
              th ID
              td(style="padding-left: 5px") #{mission.number}
          else
            tr
              th FLIGHT
              td(style="padding-left: 5px") -
              th PACKAGE
              td(style="padding-left: 5px") -
              //- th MISSION
              //- td(style="padding-left: 5px") -
              th TEMPLATE
              td(style="padding-left: 5px") -
              th ID
              td(style="padding-left: 5px") -

      //- Airbases
      table.kb-width(style="margin-top: 15px")
        colgroup
          col
          col
          col
          col
          col
          col
          col

        tbody
          tr
            td.section(colspan=8) AIRBASES

        if airfields
          each airfield, index in airfields
            tr
              th #{airfield.type}
              th #{airfield.icao}
              th.algnl.lpad5(colspan=6) #{airfield.airbase}

            tr
              tr(style="color: #a0a0a0;")
                td.algnc TCN
                td.algnc ATIS
                td.algnc GND
                td.algnc TWR
                td.algnc ILS
                td.algnc CTRL
                td.algnc ELEV
                td.algnc RWY
              tr
                td.algnc #{airfield.tcn}
                td.algnc #{airfield.atis}
                td.algnc #{airfield.gnd}
                td.algnc #{airfield.twr}
                td.algnc #{airfield.par}
                td.algnc #{airfield.ctrl}
                td.algnc #{airfield.elev}
                td.algnc #{airfield.rwy}

        else
          tr
            td(colspan=8, style="text-align: center") N/A

      //- Internal Comms
      table.kb-width(style="margin-top: 15px")
        colgroup
          col
          col(style="width: 120px")
          col(style="width: 120px")

        tbody
          tr
            td.section(colspan=3) INTERNAL COMMS
          tr
            th TYPE
            th CHAN
            th FREQ

          if flight_comms
            each comm in flight_comms
              tr
                td #{comm.type}
                td.algnc #{comm.chan}
                td.vt.freq #{comm.freq}
          else
            tr
              td(colspan=3, style="text-align: center") N/A

      //- RAMROD
      table.kb-width(style="margin-top: 15px")
        colgroup
          col
          col
          col
          col
          col
          col
          col
          col
          col
          col

        tbody
          tr
            td.section(colspan=10) RAMROD
          tr
            th 0
            th 1
            th 2
            th 3
            th 4
            th 5
            th 6
            th 7
            th 8
            th 9

          if ramrod
            tr
            each s in ramrod
              td.freq #{s}
          else
            tr
              td.freq(style="height: 17px")
              td.freq
              td.freq
              td.freq
              td.freq
              td.freq
              td.freq
              td.freq
              td.freq
              td.freq

      //- Flight Info
      table.kb-width(style="margin-top: 15px")
        colgroup
          col(style="width: 30px")
          col(style="width: 160px")
          col
          col
          col

        tbody
          tr
            td.section(colspan=5) FLIGHT INFO
          tr
            th
            th CALLSIGN
            th TCN
            th LASER
            th MODE

          if flight
            tr
              td.freq FL
              td.lpad5 #{flight[0].callsign}
              td.freq #{flight[0].tcn}
              td.freq #{flight[0].laser}
              td.freq #{flight[0].mode}
            tr
              td.freq #2
              td.lpad5 #{flight[1].callsign}
              td.freq #{flight[1].tcn}
              td.freq #{flight[1].laser}
              td.freq #{flight[1].mode}
            tr
              td.freq EL
              td.lpad5 #{flight[2].callsign}
              td.freq #{flight[2].tcn}
              td.freq #{flight[2].laser}
              td.freq #{flight[2].mode}
            tr
              td.freq #4
              td.lpad5 #{flight[3].callsign}
              td.freq #{flight[3].tcn}
              td.freq #{flight[3].laser}
              td.freq #{flight[3].mode}

          else
            tr
              td(colspan=5, style="text-align: center") N/A

      //- Support
      if support
        if support.length > 0
          table.kb-width(style="margin-top: 15px")
            colgroup
              col(style="width: 190px")
              col(style="width: 85px")
              col(style="width: 60px")
              col(style="width: 60px")
              col

            tbody
              tr
                td.section(colspan=5) SUPPORT
              tr
                th AGENCY
                th CHAN
                th FREQ
                th TCN
                th NOTES

              if support
                each sup in support
                  tr
                    td.lpad5 #{sup.agency}
                    td.lpad5 #{sup.chan}
                    td.freq #{sup.freq}
                    td.freq #{sup.tcn}
                    td.lpad5 #{sup.notes}
              else
                tr
                  td(colspan=5, style="text-align: center") N/A

      //- Package Info
      if pkg
        if pkg.length > 0
          table.kb-width(style="margin-top: 15px")
            colgroup
              col(style="width: 160px")
              col
              col
              col

            tbody
              tr
                td.section(colspan=6) PACKAGE INFO
              tr
                th CALLSIGN
                th AIRCRAFT
                th FREQ
                th TCN
                th LSR
                th TASKING

              tr
                td.lpad5 PANTHER
                td.bold.algnl.lpad5 2xFA-18C
                td.freq 123.000
                td.freq 76Y
                td.freq N/A
                td.freq CAP

              tr
                td.lpad5 AXE
                td.bold.algnl.lpad5 2xA-10C
                td.freq 134.000
                td.freq 55Y
                td.freq 1511
                td.freq CAS


      //- Notes
      if false
        table.kb-width(style="margin-top: 15px")
          colgroup
            col(style="width: 190px")
            col

            tbody
              tr
                td.section(colspan=2) NOTES
              tr
                th PREDICATE
                th DETAILS

              if notes
                each note in notes
                  tr
                    td.lpad5 #{note.pre}
                    td.lpad5 #{note.details}
              else
                tr
                  td(colspan=2, style="text-align: center") N/A

    //- ##### PAGE: WAYPOINTS & POIs
    div.kneeboard#kneeboard
      //- Waypoints
      table.kb-width(style="table-layout:fixed")
        colgroup
          col
          col
          col
          col
          col
          col
          col

        tbody
          tr
            td.section(colspan=7) MISSION WAYPOINTS

          if waypoints
            each waypoint, index in waypoints
              tr
                th WP#{index}
                th(style="font-weight: bold;", colspan=2) #{waypoint.wp}
                th(style="font-size: 16px", colspan=2) #{FormatCoords(waypoint.lat)}
                th(style="font-size: 16px", colspan=2) #{FormatCoords(waypoint.lon)}

              tr
                tr(style="color: #a0a0a0;")
                  if(index == 0)
                    td.algnc T/O
                  else
                    td.algnc TOT

                  td.algnc ACT
                  td.algnc BRG
                  td.algnc DIST
                  td.algnc SPEED
                  td.algnc ALT
                  td.algnc ETE
                tr
                  td.algnc #{SecondsToHHSS(waypoint.tot)}
                  td.algnc #{SecondsToHHSS(waypoint.act)}
                  if(index == 0)
                    td.algnc -
                    td.algnc -
                  else
                    td.algnc #{waypoint.brg}°
                    td.algnc #{waypoint.dist} NM
                  //- td.algnc #{Math.round(waypoint.gs)}
                  td.algnc #{FormatSpeed(waypoint)}
                  //- td.algnc #{Math.round(waypoint.alt)}
                  td.algnc #{FormatAltitude(waypoint.alt)}
                  td.algnc 99:99

          else
            tr
              td(colspan=7, style="text-align: center") N/A

      //- POIs
      if false
        table.kb-width(style="table-layout: fixed; margin-top: 15px")
        colgroup
          col(style="width: 30px")
          col
          col(style="width: 140px")
          col(style="width: 140px")

        tbody
          tr
            td.section(colspan=4) POINTS OF INTEREST
          tr
            th
            th NAME
            th LAT
            th LON

          if poi
            each p in poi
              tr
                td.freq #{p.type}
                td.lpad5 #{p.name}
                td.freq(style="font-size: 16px") #{FormatCoords(p.lat)}
                td.freq(style="font-size: 16px") #{FormatCoords(p.lon)}
          else
            tr
              td(colspan=4, style="text-align: center") N/A

    //- ##### PAGE: CONFIG
    div.kneeboard
      //- Config
      if false
        table(style="width: 225px")
          colgroup
            col(style="width: 100px")
            col

          tbody
            tr
              td.section(colspan=2) CONFIG
            tr
              th(colspan=2) FUEL
            tr
              td.lpad5 JOKER
              td.bold.algnr.rpad5 4000 lbs
            tr
              td.lpad5 BINGO
              td.bold.algnr.rpad5 2000 lbs
            tr
              td.lpad5 SET/TARGET
              td.bold.algnr.rpad5 7800 lbs
            tr
              td.lpad5 TOTAL
              td.bold.algnr.rpad5 12103 lbs

            tr
              th(colspan=2, style="margin-top: 15px") TAKE-OFF
            tr
              td.lpad5 GTOW
              td.bold.algnr.rpad5 34309 lbs
            tr
              td.lpad5 Vref
              td.bold.algnr.rpad5 174 KIAS
            tr
              td.lpad5 Vrot
              td.bold.algnr.rpad5 174 KIAS

          //- Loadout
      if false
        table(style="width: 225px; margin-top: 15px")
          colgroup
            col
            col

          tbody
            tr
              td.section(colspan=2) LOADOUT
            tr
              th PYL
              th ITEM

            if loadout
              each load in loadout
                tr
                  td.algnc #{load.pyl}
                  td.lpad5 #{load.item}
            else
              tr
                td(colspan=2, style="text-align: center") N/A
